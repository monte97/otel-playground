receivers:
  otlp:
    protocols:
      grpc:
        endpoint: ${env:OTEL_COLLECTOR_HOST}:${env:OTEL_COLLECTOR_PORT_GRPC}
      http:
        endpoint: ${env:OTEL_COLLECTOR_HOST}:${env:OTEL_COLLECTOR_PORT_HTTP}
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"
  prometheus/collector:
    config:
      scrape_configs:
        - job_name: "opentelemetry-collector"
          static_configs:
            - targets: ["localhost:8888"]

processors:
  batch:

exporters:
  otlphttp/metrics:
    endpoint: http://${env:PROMETHEUS_HOST}:${env:PROMETHEUS_PORT}/api/v1/otlp
    tls:
      insecure: true
  otlphttp/traces:
    endpoint: http://lgtm_tempo:4317
    tls:
      insecure: true
  otlp/grpc_traces:             # Add this exporter for gRPC traces
    endpoint: lgtm_tempo:4317  # gRPC endpoint for Tempo
    tls:
      insecure: true   
  otlphttp/logs:
    endpoint: http://${env:LOKI_HOST}:${env:LOKI_PORT}/otlp
    tls:
      insecure: true
  debug/metrics:
    verbosity: detailed
  debug/traces:
    verbosity: detailed
  debug/logs:
    verbosity: detailed

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      #exporters: [otlphttp/traces]
      exporters: [otlp/grpc_traces,debug/traces]
      #exporters: [otlphttp/traces,debug/traces]

    metrics:
      receivers: [otlp, prometheus/collector]
      processors: [batch]
      exporters: [otlphttp/metrics]
      #exporters: [otlphttp/metrics,debug/metrics]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/logs]
      #exporters: [otlphttp/logs,debug/logs]
